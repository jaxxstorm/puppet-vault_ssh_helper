# == Class: vault_ssh_helper
#
# Installs, configures and manages the vault-ssh-helper
#
# === Parameters
#
# [*arch*]
#   Architecture of vault-ssh-helper binary to download.
#
# [*archive_path*]
#   Path used when installing vault-ssh-helper via the url.
#
# [*bin_dir*]
#   Directory to create the symlink to the vault-ssh-helper binary in.
#
# [*config_dir*]
#   Directory to place vault-ssh-helper configuration files in.
#
# [*config_hash*]
#   Use this to populate the JSON config file for vault-ssh-helper.
#
# [*config_mode*]
#   Use this to set the JSON config file mode for vault-ssh-helper..
#
# [*download_extension*]
#   The extension of the archive file containing the vault-ssh-helper binary to download.
#
# [*download_url*]
#   Fully qualified url to the location of the archive file containing the vault-ssh-helper binary.
#
# [*download_url_base*]
#   Base url to the location of the archive file containing the vault-ssh-helper binary.
#
# [*install_method*]
#   Valid strings: `package` - install via system package
#                  `url`     - download and extract from a url. Defaults to `url`.
#                  `none`    - disable install.
#
# [*os*]
#   OS component in the name of the archive file containing the vault-ssh-helper binary.
#
# [*package_ensure*]
#   Only valid when the install_method == package. Defaults to `latest`.
#
# [*package_name*]
#   Only valid when the install_method == package. Defaults to `vault-ssh-helper`.
#
# [*pretty_config*]
#   Generates a human readable JSON config file. Defaults to `false`.
#
# [*pretty_config_indent*]
#   Toggle indentation for human readable JSON file. Defaults to `4`.
#
# [*purge_config_dir*]
#   Purge config files no longer generated by Puppet
#
# [*version*]
#   Specify version of vault-ssh-helper binary to download.
#
class vault_ssh_helper (
  $arch                  = $::vault_ssh_helper::params::arch,
  $archive_path          = $::vault_ssh_helper::params::archive_path,
  $bin_dir               = $::vault_ssh_helper::params::bin_dir,
  $config_dir            = $::vault_ssh_helper::params::config_dir,
  $config_hash           = $::vault_ssh_helper::params::config_hash,
  $config_mode           = $::vault_ssh_helper::params::config_mode,
  $download_extension    = $::vault_ssh_helper::params::download_extension,
  $download_url          = $::vault_ssh_helper::params::download_url,
  $download_url_base     = $::vault_ssh_helper::params::download_url_base,
  $log_dir               = $::vault_ssh_helper::params::log_dir,
  $install_method        = $::vault_ssh_helper::params::install_method,
  $os                    = $::vault_ssh_helper::params::os,
  $package_ensure        = $::vault_ssh_helper::params::package_ensure,
  $package_name          = $::vault_ssh_helper::params::package_name,
  $pretty_config         = $::vault_ssh_helper::params::pretty_config,
  $pretty_config_indent  = $::vault_ssh_helper::params::pretty_config_indent,
  $purge_config_dir      = $::vault_ssh_helper::params::purge_config_dir,
  $version               = $::vault_ssh_helper::params::version,
) inherits vault_ssh_helper::params {

  # lint:ignore:140chars
  $real_download_url    = pick($download_url, "${download_url_base}${version}/${package_name}_${version}_${os}_${arch}.${download_extension}")
  # lint:endignore

  validate_bool($purge_config_dir)
  validate_hash($config_hash)
  validate_bool($pretty_config)
  validate_integer($pretty_config_indent)



  anchor {'vault_ssh_helper_first': }
  ->
  class {'::vault_ssh_helper::install': } ->
  class {'::vault_ssh_helper::config':
    config_hash => $config_hash,
    purge       => $purge_config_dir,
  } ->
  anchor {'vault_ssh_helper_last': }

}
